<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[ÊâãÊú∫Á´ØË∞ÉÁî®ÁôæÂ∫¶ÂõæÁâáËØÜÂà´API]]></title>
    <url>%2F2019%2F08%2F15%2F%E6%89%8B%E6%9C%BA%E7%AB%AF%E8%B0%83%E7%94%A8%E7%99%BE%E5%BA%A6%E5%9B%BE%E7%89%87%E8%AF%86%E5%88%ABAPI%2F</url>
    <content type="text"><![CDATA[Âõ†‰∏∫‰∏öÂä°ÈúÄÊ±ÇÔºåÊúâËΩ¶ÁâåËØÜÂà´ÁöÑÂäüËÉΩÔºåÊâÄ‰ª•‰∏äÁΩëÊâæ‰∫ÜÂõæÁâáËØÜÂà´ÁöÑËß£ÂÜ≥ÊñπÊ°àÔºåÂèëÁé∞BATÈÉΩÊúâÔºå‰ΩÜÊòØÁôæÂ∫¶ÁöÑÂÖçË¥πÊ¨°Êï∞ÊúÄÂ§öÔºåÂØπ‰∏öÂä°Êù•ËØ¥Â∞±Áõ∏ÂΩì‰∫éÂÖ®ÂÖçË¥π‰∫ÜÔºåÊâÄ‰ª•Â∞±ÈÄâÊã©‰∫ÜÁôæÂ∫¶ÁöÑAPIÔºåüòÑ„ÄÇÂÆòÊñπÊñáÊ°£Âú∞ÂùÄÔºöhttps://ai.baidu.com/docs#/OCR-API/top„ÄÇ 1.ÊãçÁÖßËé∑ÂèñÂõæÁâáÈ°πÁõÆÊòØH5 APPÔºåÊãçÁÖßÁî®‰∫ÜH5+ÁöÑapi„ÄÇ1234567891011121314151617//ÊãçÁÖßcaptureImage() &#123; let _this = this; var cmr = plus.camera.getCamera(); var res = cmr.supportedImageResolutions[0]; //ÊëÑÂÉèÂ§¥ÊîØÊåÅÁöÑÊãçÁÖßÂàÜËæ®Áéá var fmt = cmr.supportedImageFormats[0]; //ÊëÑÂÉèÂ§¥ÊîØÊåÅÁöÑÊãçÁÖßÊñá‰ª∂Ê†ºÂºè cmr.captureImage((path)=&gt; &#123; _this.convertUrl(path); &#125;, function(error) &#123; console.log(&quot;Capture image failed: &quot; + error.message); &#125;, &#123; resolution: res, format: fmt &#125; );&#125;, 2.ÂõæÁâáËΩ¨base64Ê†πÊçÆÂÆòÊñπÊñáÊ°£ÔºåÂõæÁâáË¶ÅËΩ¨Êàêbase64Êï∞ÊçÆ„ÄÇ123456789101112131415161718192021222324//ËΩ¨Êç¢ÂõæÁâáË∑ØÂæÑÂπ∂Ë∞ÉÁî®ÊñπÊ≥ïËØÜÂà´convertUrl(path)&#123; let _this = this; //ËΩ¨Êç¢‰∏∫Êú¨Âú∞Êñá‰ª∂Ë∑ØÂæÑ plus.io.resolveLocalFileSystemURL(path, function(entry) &#123; var localurl = entry.toLocalURL(); var reader = new plus.io.FileReader(); reader.onloadend = function (e) &#123; var imgData = e.target.result.replace(&quot;data:image/jpeg;base64,&quot;, &quot;&quot;).replace(&quot;data:image/png;base64,&quot;, &quot;&quot;);//base64ÂõæÁâá ocr.startOCR(imgData, res=&gt;&#123; var number = res.words_result.number; if(number.length == 7)&#123; uni.showToast(&#123; title: &quot;ËØÜÂà´ÊàêÂäü&quot;, icon: &quot;none&quot; &#125;) var values = number.split(&quot;&quot;); _this.result = values; &#125; &#125;); &#125;; reader.readAsDataURL(localurl); &#125;);&#125;, 3.Ëé∑ÂèñAccess TokenÂ•Ω‰∫ÜÔºåÁé∞Âú®ÂõæÁâáÊï∞ÊçÆÊúâ‰∫ÜÔºåÂú®Ë∞ÉÁôæÂ∫¶ËΩ¶ÁâåËØÜÂà´API‰πãÂâçËøòË¶ÅÂÖàËé∑ÂèñAccess Token,ËÄåË¶ÅËé∑ÂèñAccess TokenÔºåÂèàÂæóÂÖàÁôªËÆ∞‰∏Ä‰∏™Â∫îÁî®ÔºåÂèñÂà∞Â∫îÁî®ÁöÑAPI KEYÂíåSECRET KEY„ÄÇ12345678910111213141516171819202122232425//Ëé∑Âèñaccess_tokenfunction requestAccessToken(callback) &#123; let params = &#123; grant_type: &apos;client_credentials&apos;, //Âõ∫ÂÆöÂÄº client_id: api_key, //ÁôªËÆ∞Â∫îÁî®ÁöÑAPI KEY client_secret: secret_key //ÁôªËÆ∞Â∫îÁî®ÁöÑSECRET KEY &#125; //networkÊòØÂ∞ÅË£ÖÁöÑajaxËØ∑Ê±ÇÂáΩÊï∞ network.request(&apos;https://aip.baidubce.com/oauth/2.0/token&apos;, params, null, &quot;GET&quot;, res =&gt; &#123; if (res.hasOwnProperty(&apos;access_token&apos;)) &#123; let nowTime = new Date().getTime(); //ËÆ∞ÂΩïÂΩìÂâçËØ∑Ê±ÇÊó∂Èó¥ÊòØ‰∏∫‰∫ÜÂà§Êñ≠access_tokenÊòØÂê¶ËøáÊúü let access_token_obj = &#123; access_token: res.access_token, requestTime: nowTime &#125; uni.setStorageSync(&quot;access_token_obj&quot;, access_token_obj) callback(res.access_token); &#125; else &#123; //Ëé∑Âèñaccess_tokenÂ§±Ë¥• console.log(JSON.stringify(res)); &#125; &#125;);&#125; 4.Ë∞ÉÁî®ËΩ¶ÁâåËØÜÂà´APIÂÖàÂà§Êñ≠‰πãÂâçÊòØÂê¶ËØ∑Ê±ÇËøáaccess_tokenÔºåÂ¶ÇÊûúËØ∑Ê±ÇËøáÂÜçÂà§Êñ≠access_tokenÊòØÂê¶ËøáÊúü„ÄÇ12345678910111213141516171819202122/** * ÂºÄÂßãËøõË°åÊñáÂ≠óËØÜÂà´Ôºå‰º†ÂÖ•base64ÂõæÁâáÊï∞ÊçÆÂíåÂõûË∞ÉÂáΩÊï∞ */function startOCR(imgData, callback) &#123; console.log(&quot;ÂºÄÂßãËØÜÂà´...&quot;); console.log(&quot;access_tokenÁºìÂ≠òÔºü&quot; + uni.getStorageSync(&quot;access_token_obj&quot;)); if (uni.getStorageSync(&quot;access_token_obj&quot;)) &#123; //Â¶ÇÊûúaccess_tokenÂ∑≤Â≠òÂÖ•ÁºìÂ≠òÔºåË°®Á§∫ËØ∑Ê±ÇËøá let obj = uni.getStorageSync(&quot;access_token_obj&quot;); let nowTime = new Date().getTime(); if ((nowTime - obj.requestTime) &gt;= 1000 * 3600 * 24 * 30) &#123; //Â¶ÇÊûú‰∏äÊ¨°ËØ∑Ê±ÇÊó∂Èó¥Âú®30Â§©‰πãÂâçÔºåÂàôÈúÄË¶ÅÈáçÊñ∞Ëé∑Âèñaccess_token requestAccessToken(res =&gt; &#123; recognition(res, imgData, callback); &#125;); &#125; else &#123; recognition(obj.access_token, imgData, callback); &#125; &#125; else &#123; //ÁºìÂ≠ò‰∏≠Ê≤°Êúâaccess_token requestAccessToken(res =&gt; &#123; recognition(res, imgData, callback); &#125;); &#125;&#125; 123456789101112131415161718//ËØÜÂà´‰∏≠...Ë∞ÉÁî®ÊñáÂ≠óËØÜÂà´API,‰º†ÂÖ•ÂõæÁâáÊï∞ÊçÆÂèÇÊï∞function recognition(access_token, imgData, callback) &#123; let params = &#123; access_token: access_token, image: imgData &#125;; let header = &#123; &apos;Content-Type&apos;: &apos;application/x-www-form-urlencoded&apos; //ËØ∑Ê±ÇÂ§¥ËÆæÁΩÆÊàêÂõ∫ÂÆöÂÄº &#125;; network.request(&apos;https://aip.baidubce.com/rest/2.0/ocr/v1/license_plate&apos;, params, header, &quot;POST&quot;, res =&gt; &#123; callback(res); &#125;, err =&gt; &#123; uni.showToast(&#123; title: &quot;ËØ∑ÂØπÂáÜËΩ¶ÁâåÈáçÊñ∞ÊãçÁÖß&quot;, icon: &quot;none&quot; &#125;) &#125;, &quot;ËØÜÂà´‰∏≠...&quot;);&#125; Âè™Ë¶ÅÂèÇÊï∞ÈÉΩÊ≤°ÊúâÈóÆÈ¢òÔºåÈÇ£‰πàÊé•‰∏ãÊù•Â∞±ËÉΩÂæóÂà∞ËøîÂõûÁªìÊûúÔºåËøîÂõûËΩ¶Áâå‰ø°ÊÅØÔºàËΩ¶ÁâåÂè∑„ÄÅËΩ¶ÁâåÈ¢úËâ≤Á≠âÁ≠âÔºâ„ÄÇË∞ÉÁî®ÂÖ∂‰ªñÂú∫ÊôØÁöÑÂõæÁâáËØÜÂà´APIÂêåÁêÜ„ÄÇ]]></content>
      <categories>
        <category>ÂâçÁ´Ø</category>
      </categories>
      <tags>
        <tag>H5 APP</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ÂæÆ‰ø°Â∞èÁ®ãÂ∫èÁúÅÂ∏ÇÂå∫‰∏âÁ∫ßËÅîÂä®‰ºòÂåñÁâà]]></title>
    <url>%2F2019%2F07%2F16%2F%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%9C%81%E5%B8%82%E5%8C%BA%E4%B8%89%E7%BA%A7%E8%81%94%E5%8A%A8%E4%BC%98%E5%8C%96%E7%89%88%2F</url>
    <content type="text"><![CDATA[‰ºòÂåñÁâàÁöÑÁúÅÂ∏ÇÂå∫ÈÄâÊã©Âô®ÔºåÊõ¥ÁÆÄÂåñÁöÑJsÊï∞ÊçÆÔºåÊñπ‰æøËæìÂá∫‰ª•ÂèäËØªÂèñÊòæÁ§∫„ÄÇjsÂú∞ÂùÄÔºöÂüéÂ∏ÇÊï∞ÊçÆjs„ÄÇ È°µÈù¢ÁªÑ‰ª∂Ôºö 123&lt;picker mode=&quot;multiSelector&quot; bindchange=&quot;bindMultiPickerChange&quot; bindcolumnchange=&quot;bindMultiPickerColumnChange&quot; value=&quot;&#123;&#123;citiesIndex&#125;&#125;&quot; range=&quot;&#123;&#123;cityArray&#125;&#125;&quot; range-key=&quot;name&quot;&gt; &lt;/picker&gt; js‰ºòÂåñÂêéÊó†ÈúÄÊîæÊúçÂä°Âô®ËØ∑Ê±ÇÔºåÊîæÊú¨Âú∞Âç≥ÂèØ„ÄÇ 1.Âä†ËΩΩÂüéÂ∏ÇÊï∞ÊçÆ1var array = require(&apos;../../../utils/cityData.js&apos;).cityData; 2.ÈÄâÊã©Âô®Êï∞ÊçÆÂàùÂßãÂåñÂàùÂßãÂåñÈÄâÊã©Âô®Êï∞ÊçÆÔºåÈªòËÆ§ÈÉΩÈÄâ‰∏≠Á¨¨‰∏ÄÈ°π„ÄÇ 123456789101112131415161718192021222324252627282930let cityArray = [ [], [], []];for (let x in array[&quot;86&quot;]) &#123; //Â≠òÂÖ•ÁúÅ cityArray[0].push(&#123; name: array[&quot;86&quot;][x], code: x &#125;);&#125;for (let y in array[cityArray[0][0].code]) &#123; //Â≠òÂÖ•Â∏ÇÔºåÈªòËÆ§ÂÖ≥ËÅîÁ¨¨‰∏Ä‰∏™ÁúÅ cityArray[1].push(&#123; name: array[cityArray[0][0].code][y], code: y &#125;);&#125;for (let z in array[cityArray[1][0].code]) &#123; //Â≠òÂÖ•Âå∫ÔºåÈªòËÆ§ÂÖ≥ËÅîÁ¨¨‰∏Ä‰∏™ÁúÅÁöÑÁ¨¨‰∏Ä‰∏™Â∏Ç cityArray[2].push(&#123; name: array[cityArray[1][0].code][z], code: z &#125;);&#125;this.setData(&#123; cityArray: cityArray&#125;); 3.ÂàóÊªöÂä®‰∫ã‰ª∂ÊªöÂä®ÈÄâÊã©Âô®ÁöÑÂàóÊó∂Áõ∏Â∫îÁöÑÊï∞ÊçÆÂèòÂåñÔºåËøôÊòØÊúÄÈáçË¶ÅÁöÑÁÇπ„ÄÇ 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162//ÂàóÊªöÂä®‰∫ã‰ª∂ bindMultiPickerColumnChange(e) &#123; let selectedIndex = e.detail.value; let cityArray = this.data.cityArray; let list1 = []; //Â≠òÊîæÁ¨¨‰∫åÂàóÊï∞ÊçÆÔºåÂç≥Â∏ÇÁöÑÂàó let list2 = []; //Â≠òÊîæÁ¨¨‰∏âÂàóÊï∞ÊçÆÔºåÂç≥Âå∫ÁöÑÂàó let citiesIndex = []; let pcode = &apos;&apos;, scode = &apos;&apos;; let provinceIndex = this.data.citiesIndex[0]; //ÈÄâ‰∏≠ÁöÑÁúÅÁ¥¢Âºï let cityIndex = this.data.citiesIndex[1]; //ÈÄâ‰∏≠ÁöÑÂ∏ÇÁ¥¢Âºï let areaIndex = this.data.citiesIndex[2]; //ÈÄâ‰∏≠ÁöÑÂå∫Á¥¢Âºï switch (e.detail.column) &#123; case 0: //ÊªöÂä®Á¨¨‰∏ÄÂàó pcode = cityArray[0][selectedIndex].code; for(let x in array[pcode])&#123; list1.push(&#123; name: array[pcode][x], code: x &#125;); &#125; scode = list1[0].code; for(let y in array[scode])&#123; list2.push(&#123; name: array[scode][y], code: y &#125;); &#125; citiesIndex = [selectedIndex, 0, 0, 0]; break; case 1: //ÊªöÂä®Á¨¨‰∫åÂàó list1 = cityArray[1]; scode = list1[selectedIndex].code; for(let x in array[scode])&#123; list2.push(&#123; name: array[scode][x], code: x &#125;); &#125; citiesIndex = [provinceIndex, selectedIndex, 0, 0]; break; case 2: //ÊªöÂä®Á¨¨‰∏âÂàó list1 = cityArray[1]; list2 = cityArray[2]; citiesIndex = [provinceIndex, cityIndex, selectedIndex, 0]; break; &#125; this.setData(&#123; [`cityArray[1]`]: list1, //ÈáçÊñ∞ËµãÂÄºÁ¨¨‰∫åÂàóÊï∞ÁªÑÔºåÂç≥ËÅîÂä®‰∫ÜÂ∏Ç [`cityArray[2]`]: list2, //ÈáçÊñ∞ËµãÂÄºÁ¨¨‰∏âÂàóÊï∞ÁªÑÔºåÂç≥ËÅîÂä®‰∫ÜÂå∫ citiesIndex: citiesIndex, //Êõ¥Êñ∞Á¥¢Âºï &#125;); 4.ÈÄâÊã©Âô®ÂèòÊõ¥‰∫ã‰ª∂12345678910111213141516171819202122//ÈÄâÊã©Âô®ÈÄâÊã©‰∫ã‰ª∂ bindMultiPickerChange(e) &#123; let cityIndex = e.detail.value; let cityArray = this.data.cityArray; let province = cityArray[0][cityIndex[0]].name; let city = cityArray[1][cityIndex[1]].name; let district = cityArray[2][cityIndex[2]].name; //ÈÄâÊã©ÁöÑÂú∞ÂùÄÁºñÁ†Å let areaCode = cityArray[2][cityIndex[2]].code; //ÈÄâÊã©ÁöÑÂú∞ÂùÄÊñáÊú¨ let selectedAddress = &quot;&quot;; selectedAddress = province + city + district; this.setData(&#123; region: selectedAddress, areaCode: areaCode, provinceCode: cityArray[0][cityIndex[0]].code, cityCode: cityArray[1][cityIndex[1]].code &#125;); &#125;, 5.Ê†πÊçÆ‰º†ËøáÊù•ÁöÑÂÄºÊòæÁ§∫ÁúÅÂ∏ÇÂå∫‰øÆÊîπÂàùÂßãÂåñÈÄâÊã©Âô®ÊñπÊ≥ïÔºåÂà§Êñ≠ÂΩì‰øÆÊîπÂú∞ÂùÄÊó∂ËØªÂèñÊòæÁ§∫Â∑≤ÈÄâÊã©ÁöÑÁúÅÂ∏ÇÂå∫„ÄÇ 12345678910111213141516171819202122232425262728293031323334353637383940for (let x in array[&quot;86&quot;]) &#123; //Â≠òÂÖ•ÁúÅ cityArray[0].push(&#123; name: array[&quot;86&quot;][x], code: x &#125;);&#125;if(this.data.address_id != &quot;&quot;)&#123; //ÁºñËæëÂú∞ÂùÄÔºåÊ†πÊçÆ‰º†ËøáÊù•ÁöÑÂú∞ÂùÄÊñáÊú¨ÂíåÁºñÁ†ÅË∞ÉÊï¥ÈÄâÊã©Âô® for (let y in array[provinceCode]) &#123; cityArray[1].push(&#123; name: array[provinceCode][y], code: y &#125;); &#125; for (let z in array[cityCode]) &#123; cityArray[2].push(&#123; name: array[cityCode][z], code: z &#125;); &#125; for(let i = 0,len = cityArray[0].length;i&lt;len;i++)&#123; if (cityArray[0][i].code == provinceCode) &#123; provinceIndex = i; &#125; &#125; for (let j = 0, len = cityArray[1].length; j &lt; len; j++) &#123; if (cityArray[1][j].code == cityCode) &#123; cityIndex = j; &#125; &#125; for (let k = 0, len = cityArray[2].length; k &lt; len; k++) &#123; if (cityArray[2][k].code == areaCode) &#123; districtIndex = k; &#125; &#125;&#125; else &#123; //Ê∑ªÂä†Âú∞ÂùÄ ÊïàÊûúÔºö]]></content>
      <categories>
        <category>ÂâçÁ´Ø</category>
      </categories>
      <tags>
        <tag>ÂæÆ‰ø°Â∞èÁ®ãÂ∫è</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ÂæÆ‰ø°Â∞èÁ®ãÂ∫èÈïøÊåâÊï∞ÈáèËá™Âä®Âä†Âáè]]></title>
    <url>%2F2019%2F05%2F28%2F%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E9%95%BF%E6%8C%89%E6%95%B0%E9%87%8F%E8%87%AA%E5%8A%A8%E5%8A%A0%E5%87%8F%2F</url>
    <content type="text"><![CDATA[ÂºÄÂèë‰∏Ä‰∏™ÂæÆ‰ø°Â∞èÁ®ãÂ∫èÔºåÊúâË¥≠Áâ©ËΩ¶ÁöÑÂäüËÉΩÔºåÂú®ÊµãËØïÂä†ÂáèË¥≠Áâ©ËΩ¶‰∏≠ÂïÜÂìÅÊï∞ÈáèÊó∂ÔºåÂèëÁé∞ÁÇπ‰∏Ä‰∏ãÂä†‰∏ÄÊàñÂáè‰∏ÄÂ§™ÁÉ¶Ôºå‰∫éÊòØÊ∑ªÂä†‰∫ÜÈïøÊåâËá™Âä®Âä†ÂáèÁöÑÂäüËÉΩ„ÄÇ È°µÈù¢ÁªÑ‰ª∂ 123&lt;text class="minus" catchtouchstart='startMinus' catchtouchend='endMinus' data-index="&#123;&#123;index&#125;&#125;" data-goodIndex="&#123;&#123;goodIndex&#125;&#125;"&gt;-&lt;/text&gt; &#123;&#123;good.num&#125;&#125; &lt;!-- ÂïÜÂìÅÊï∞Èáè --&gt;&lt;text class="add" catchtouchstart='startAdd' catchtouchend='endAdd' data-index="&#123;&#123;index&#125;&#125;" data-goodIndex="&#123;&#123;goodIndex&#125;&#125;"&gt;+&lt;/text&gt; 1.ÁõëÂê¨Ëß¶Êë∏ÂºÄÂßã‰∫ã‰ª∂È¶ñÂÖàÁõëÂê¨Ëß¶Êë∏ÂºÄÂßã‰∫ã‰ª∂touchstartÔºåËÆ∞ÂΩïËß¶Êë∏ÂºÄÂßãÊó∂Èó¥ÔºåÊó∂Èó¥ÂêéÈù¢ÊúâÁî®„ÄÇÈúÄË¶ÅÁî®Âà∞ÂÆöÊó∂Âô®ÔºåtimerÁî®ÁöÑÊòØÈ°µÈù¢ÂÖ®Â±ÄÂèòÈáè„ÄÇ 123456789101112131415161718192021222324//Êåâ‰ΩèÂä†Âè∑‰∏çÂÅúÂú∞Âä†startAdd(e)&#123; startTime = new Date().getTime(); //ËÆ∞ÂΩïËß¶Êë∏ÂºÄÂßãÊó∂Èó¥ let index = e.currentTarget.dataset.index; let goodIndex = e.currentTarget.dataset.goodindex; timer = setInterval(()=&gt;&#123; //ÂÆö‰πâÂÆöÊó∂Âô® this.data.cartList[index].goodList[goodIndex].num++; let sumPrice = 0; let count = 0; this.data.cartList.map((type, index) =&gt; &#123; type.goodList.map((good, index) =&gt; &#123; count += good.num; //ËÆ°ÁÆóÂïÜÂìÅÊï∞Èáè if (good.selected) &#123; //ËÆ°ÁÆóÈÄâ‰∏≠ÂïÜÂìÅ‰ª∑Ê†º sumPrice += good.price * good.num; &#125; &#125;); &#125;); this.setData(&#123; [`cartList[$&#123;index&#125;].goodList[$&#123;goodIndex&#125;]`]: this.data.cartList[index].goodList[goodIndex], //Ë¥≠Áâ©ËΩ¶ÂàóË°®ÂÜÖÂÆπÂ±ÄÈÉ®Âà∑Êñ∞ goodSumPrice: sumPrice, cartNum: count &gt; 99 ? '99+' : count &#125;); &#125;, 100);&#125; 2.ÁõëÂê¨Ëß¶Êë∏ÁªìÊùü‰∫ã‰ª∂Ëß¶Êë∏ÁªìÊùüÔºåÂàôÁªìÊùüÊï∞ÈáèÂä†ÂáèÔºåÊ∏ÖÈô§ÂÆöÊó∂Âô®„ÄÇËÆ∞ÂΩïÁªìÊùüÊó∂Èó¥ÔºåÂíåÂºÄÂßãÊó∂Èó¥ÊØîËæÉÔºåÊ†πÊçÆÂæÆ‰ø°Â∞èÁ®ãÂ∫èÂÆòÊñπÊñáÊ°£ÂÆö‰πâÔºöÊâãÊåáËß¶Êë∏ÂêéÔºåË∂ÖËøá350msÂÜçÁ¶ªÂºÄ‰∏∫ÈïøÊåâ„ÄÇÂèç‰πãÂàôËÆ§‰∏∫ÊòØÁÇπÂáªÔºåÊâßË°åÁÇπÂáªÁöÑÈÄªËæëÔºåÂç≥Êï∞ÈáèÂä†‰∏Ä„ÄÇ 12345678//ÁªìÊùüÂä†endAdd(e)&#123; endTime = new Date().getTime(); //ËÆ∞ÂΩïÁªìÊùüÊó∂Èó¥ if((endTime - startTime) &lt; 350000)&#123; this.clickAdd(e); &#125; clearInterval(timer);&#125; ÁÇπÂáª‰∫ã‰ª∂ÈÄªËæëÔºö123456789101112131415161718192021//ÁÇπÂáªÂä†Âè∑clickAdd(e)&#123; let index = e.currentTarget.dataset.index; let goodIndex = e.currentTarget.dataset.goodindex; this.data.cartList[index].goodList[goodIndex].num ++; let sumPrice = 0; let count = 0; this.data.cartList.map((type, index) =&gt; &#123; type.goodList.map((good, index) =&gt; &#123; count += good.num; if (good.selected) &#123; sumPrice += good.price * good.num; &#125; &#125;); &#125;); this.setData(&#123; [`cartList[$&#123;index&#125;].goodList[$&#123;goodIndex&#125;]`]: this.data.cartList[index].goodList[goodIndex], goodSumPrice: sumPrice, cartNum: count&gt;99?'99+':count &#125;);&#125; ‰πãÊâÄ‰ª•Ë¶ÅÂà§Êñ≠ÊòØÈïøÊåâËøòÊòØÁÇπÂáªÊòØÂõ†‰∏∫Âú®Ê†áÁ≠æÂÖÉÁ¥†‰∏äÂÆö‰πâ‰∫ÜËß¶Êë∏ÂºÄÂßã‰∫ã‰ª∂ÂêéÔºåtap‰∫ã‰ª∂Â∞±‰∏çÂÜçËß¶ÂèëÔºåÊâÄ‰ª•ÈúÄË¶ÅÊâãÂä®Ë∞ÉÁî®ÁÇπÂáªÊñπÊ≥ï„ÄÇ ÂáèÂè∑ÂêåÁêÜÔºåÈúÄË¶ÅÊ≥®ÊÑèÊï∞ÈáèÂáèÂà∞0Êó∂ÁöÑÊìç‰ΩúÔºåÊàëÁöÑÈÄªËæëÊòØÈïøÊåâÊï∞ÈáèÂáèÂà∞‰∏ÄÂ∞±ÂÅúÊ≠¢ÔºåÂÜçÁÇπÂáªÂáèÂè∑ÂàôÂà†Èô§ËØ•ÂïÜÂìÅ„ÄÇ ÊïàÊûúÂõæ]]></content>
      <categories>
        <category>ÂâçÁ´Ø</category>
      </categories>
      <tags>
        <tag>ÂæÆ‰ø°Â∞èÁ®ãÂ∫è</tag>
      </tags>
  </entry>
</search>
