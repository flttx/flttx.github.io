<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-05-21T06:13:19.752Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title></title>
    <link href="http://yoursite.com/2019/05/21/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%9C%81%E5%B8%82%E5%8C%BA%E8%A1%97%E9%81%93%E5%9B%9B%E7%BA%A7%E8%81%94%E5%8A%A8%E5%B8%A6%E5%8C%BA%E5%9F%9F%E7%BC%96%E7%A0%81/"/>
    <id>http://yoursite.com/2019/05/21/微信小程序省市区街道四级联动带区域编码/</id>
    <published>2019-05-21T06:07:05.049Z</published>
    <updated>2019-05-21T06:13:19.752Z</updated>
    
    <content type="html"><![CDATA[<p>微信小程序利用picker多列选择器自定义的省市区街道选择器，输出地址文本以及对应的地区编码。</p><p>首先需要城市的数据，由于微信小程序有2M的限制，而且城市数据的js已经接近2M了，所以放到服务器上，用时请求即可。为了方便数据处理，js里面就是一个json数组，省是最外层，然后市区街道都存对应的children数组里。<br>这里附上js：<a href="https://wxapi.xinglinjiuye.cn/js/cityData.js" target="_blank" rel="noopener">城市数据js</a></p><p>页面组件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;picker mode=&quot;multiSelector&quot; bindchange=&quot;bindMultiPickerChange&quot; bindcolumnchange=&quot;bindMultiPickerColumnChange&quot; </span><br><span class="line">value=&quot;&#123;&#123;citiesIndex&#125;&#125;&quot; range=&quot;&#123;&#123;cityArray&#125;&#125;&quot; range-key=&quot;name&quot;&gt;</span><br><span class="line">  &lt;/picker&gt;</span><br></pre></td></tr></table></figure><hr><h2 id="1-加载城市数据"><a href="#1-加载城市数据" class="headerlink" title="1.加载城市数据"></a>1.加载城市数据</h2><p>首次进入页面时发请求加载，加载过就存入缓存，避免重复加载。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">onLoad: function (options) &#123;</span><br><span class="line">    var that = this;</span><br><span class="line">    if(wx.getStorageSync(&quot;cityData&quot;))&#123;</span><br><span class="line">      array = wx.getStorageSync(&quot;cityData&quot;);</span><br><span class="line">      that.initData();</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">      wx.request(&#123;</span><br><span class="line">        url: &apos;https://wxapi.xinglinjiuye.cn/js/cityData.js&apos;,</span><br><span class="line">        success: res =&gt; &#123;</span><br><span class="line">          array = res.data;</span><br><span class="line">          wx.setStorageSync(&quot;cityData&quot;, res.data);</span><br><span class="line">          that.initData();</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br></pre></td></tr></table></figure><hr><h2 id="2-选择器数据初始化"><a href="#2-选择器数据初始化" class="headerlink" title="2.选择器数据初始化"></a>2.选择器数据初始化</h2><p>初始化选择器数据，默认都选中第一项。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">initData: function()&#123;</span><br><span class="line">    let cityArray = [[], [], [], []];  //选择器数据</span><br><span class="line"></span><br><span class="line">    for (let i = 0, len = array.length; i &lt; len; i++) &#123;  //存入省</span><br><span class="line">      cityArray[0].push(&#123;</span><br><span class="line">        name: array[i].name,</span><br><span class="line">        code: array[i].code</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    for (let j = 0, len = array[0].children.length; j &lt; len; j++) &#123;  //存入市，默认关联第一个省</span><br><span class="line">      cityArray[1].push(&#123;</span><br><span class="line">        name: array[0].children[j].name,</span><br><span class="line">        code: array[0].children[j].code</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    for (let k = 0, len = array[0].children[0].children.length; k &lt; len; k++) &#123;  //存入区，默认关联第一个省的第一个市</span><br><span class="line">      cityArray[2].push(&#123;</span><br><span class="line">        name: array[0].children[0].children[k].name,</span><br><span class="line">        code: array[0].children[0].children[k].code</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    for (let s = 0, len = array[0].children[0].children[0].children.length; s &lt; len; s++) &#123;  //存入街道，默认关联第一个省的第一个市的第一个区</span><br><span class="line">      cityArray[3].push(&#123;</span><br><span class="line">        name: array[0].children[0].children[0].children[s].name,</span><br><span class="line">        code: array[0].children[0].children[0].children[s].code</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    this.setData(&#123;</span><br><span class="line">      cityArray: cityArray</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><hr><h2 id="3-列滚动事件"><a href="#3-列滚动事件" class="headerlink" title="3.列滚动事件"></a>3.列滚动事件</h2><p>滚动选择器的列时相应的数据变化，这是最重要的点。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line">//列滚动事件</span><br><span class="line">  bindMultiPickerColumnChange(e)&#123;</span><br><span class="line">    let selectedIndex = e.detail.value;  //滚动到哪一项</span><br><span class="line"></span><br><span class="line">    let cityArray = this.data.cityArray;</span><br><span class="line">    let list1 = []; //存放第二列数据，即市的列</span><br><span class="line">    let list2 = []; //存放第三列数据，即区的列</span><br><span class="line">    let list3 = []; //存放第四例数据，即街道的列</span><br><span class="line"></span><br><span class="line">    let citiesIndex = [];</span><br><span class="line">    let provinceIndex = this.data.citiesIndex[0];  //选中的省索引</span><br><span class="line">    let cityIndex = this.data.citiesIndex[1];  //选中的市索引 </span><br><span class="line">    let areaIndex = this.data.citiesIndex[2];  //选中的区索引</span><br><span class="line"></span><br><span class="line">    switch (e.detail.column) &#123;  //判断滚动的哪一列并做相应的数据处理</span><br><span class="line">      case 0: //滚动第一列，即省的那一列</span><br><span class="line">        for(let i = 0,len = array[selectedIndex].children.length;i&lt;len;i++)&#123; //存入省下面的市</span><br><span class="line">          list1.push(&#123;</span><br><span class="line">            name: array[selectedIndex].children[i].name,</span><br><span class="line">            code: array[selectedIndex].children[i].code</span><br><span class="line">          &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">        for (let j = 0, len = array[selectedIndex].children[0].children.length; j &lt; len; j++) &#123; //存入市下面的区</span><br><span class="line">          list2.push(&#123;</span><br><span class="line">            name: array[selectedIndex].children[0].children[j].name,</span><br><span class="line">            code: array[selectedIndex].children[0].children[j].code</span><br><span class="line">          &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">        for (let k = 0, len = array[selectedIndex].children[0].children[0].children.length; k &lt; len; k++) &#123;//存入区下面的街道</span><br><span class="line">          list3.push(&#123;</span><br><span class="line">            name: array[selectedIndex].children[0].children[0].children[k].name,</span><br><span class="line">            code: array[selectedIndex].children[0].children[0].children[k].code</span><br><span class="line">          &#125;);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        citiesIndex = [selectedIndex, 0, 0, 0];   //记录索引</span><br><span class="line">        break;</span><br><span class="line">      case 1:  //滚动第二列，即市的那一列</span><br><span class="line">        list1 = cityArray[1];  //市那一列数据不需要更新</span><br><span class="line"></span><br><span class="line">        for(let i = 0,len = array[provinceIndex].children[selectedIndex].children.length;i&lt;len;i++)&#123;//存入市下面的区</span><br><span class="line">          list2.push(&#123;</span><br><span class="line">            name: array[provinceIndex].children[selectedIndex].children[i].name,</span><br><span class="line">            code: array[provinceIndex].children[selectedIndex].children[i].code</span><br><span class="line">          &#125;);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        for (let j = 0, len = array[provinceIndex].children[selectedIndex].children[0].children.length; j &lt; len; j++) &#123;//存入区下面的街道</span><br><span class="line">          list3.push(&#123;</span><br><span class="line">            name: array[provinceIndex].children[selectedIndex].children[0].children[j].name,</span><br><span class="line">            code: array[provinceIndex].children[selectedIndex].children[0].children[j].code</span><br><span class="line">          &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">        citiesIndex = [provinceIndex, selectedIndex, 0, 0];  //记录索引</span><br><span class="line">        break;</span><br><span class="line">      case 2: //滚动第三列，即区的那一列</span><br><span class="line">        list1 = cityArray[1]; //市和区的数据都需要更新</span><br><span class="line">        list2 = cityArray[2];</span><br><span class="line"></span><br><span class="line">        for (let i = 0, len = array[provinceIndex].children[cityIndex].children[selectedIndex].children.length; i &lt; len; i++) &#123; //存入区下面的街道</span><br><span class="line">          list3.push(&#123;</span><br><span class="line">            name: array[provinceIndex].children[cityIndex].children[selectedIndex].children[i].name,</span><br><span class="line">            code: array[provinceIndex].children[cityIndex].children[selectedIndex].children[i].code</span><br><span class="line">          &#125;);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        citiesIndex = [provinceIndex, cityIndex, selectedIndex, 0];  //记录索引</span><br><span class="line">        break;</span><br><span class="line">      case 3: //滚动第四列，即街道那一列</span><br><span class="line">        list1 = cityArray[1];</span><br><span class="line">        list2 = cityArray[2];</span><br><span class="line">        list3 = cityArray[3];</span><br><span class="line"></span><br><span class="line">        citiesIndex = [provinceIndex, cityIndex, areaIndex, selectedIndex];  //记录索引</span><br><span class="line">        break;</span><br><span class="line">    &#125;</span><br><span class="line">    this.setData(&#123;</span><br><span class="line">      [`cityArray[1]`]: list1,//重新赋值第二列数组，即联动了市</span><br><span class="line">      [`cityArray[2]`]: list2,//重新赋值第三列数组，即联动了区</span><br><span class="line">      [`cityArray[3]`]: list3,//重新赋值第四列数组，即联动了街道</span><br><span class="line">      citiesIndex: citiesIndex,//更新索引</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><hr><h2 id="4-选择器变更事件"><a href="#4-选择器变更事件" class="headerlink" title="4.选择器变更事件"></a>4.选择器变更事件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">//选择器选择事件</span><br><span class="line"> bindMultiPickerChange(e)&#123;</span><br><span class="line">   let cityIndex = e.detail.value;</span><br><span class="line">   //选择的地址拼接</span><br><span class="line">   let selectedAddress = array[cityIndex[0]].name + array[cityIndex[0]].children[cityIndex[1]].name + array[cityIndex[0]].children[cityIndex[1]].children[cityIndex[2]].name + array[cityIndex[0]].children[cityIndex[1]].children[cityIndex[2]].children[cityIndex[3]].name;</span><br><span class="line">   //选择的区域编码</span><br><span class="line">   let areaCode = array[cityIndex[0]].children[cityIndex[1]].children[cityIndex[2]].children[cityIndex[3]].code;</span><br><span class="line"></span><br><span class="line"> &#125;,</span><br></pre></td></tr></table></figure><hr><h2 id="效果："><a href="#效果：" class="headerlink" title="效果："></a>效果：</h2><p><img src="https://upload-images.jianshu.io/upload_images/17143985-a1baccb0df585452.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;微信小程序利用picker多列选择器自定义的省市区街道选择器，输出地址文本以及对应的地区编码。&lt;/p&gt;
&lt;p&gt;首先需要城市的数据，由于微信小程序有2M的限制，而且城市数据的js已经接近2M了，所以放到服务器上，用时请求即可。为了方便数据处理，js里面就是一个json数组，省
      
    
    </summary>
    
    
  </entry>
  
</feed>
